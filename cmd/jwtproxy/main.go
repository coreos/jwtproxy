// Copyright 2015 CoreOS, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"flag"
	"os"

	log "github.com/Sirupsen/logrus"

	"github.com/coreos-inc/jwtproxy"
	"github.com/coreos-inc/jwtproxy/config"

	_ "github.com/coreos-inc/jwtproxy/jwt/claims/static"
	_ "github.com/coreos-inc/jwtproxy/jwt/keyserver/keyregistry"
	_ "github.com/coreos-inc/jwtproxy/jwt/keyserver/preshared"
	_ "github.com/coreos-inc/jwtproxy/jwt/noncestorage/local"
	_ "github.com/coreos-inc/jwtproxy/jwt/privatekey/autogenerated"
	_ "github.com/coreos-inc/jwtproxy/jwt/privatekey/preshared"
)

func main() {
	flag.CommandLine = flag.NewFlagSet(os.Args[0], flag.ExitOnError)
	flagConfigPath := flag.String("config", "", "Load configuration from the specified yaml file.")
	flagLogLevel := flag.String("log-level", "info", "Define the logging level.")
	flag.Parse()

	// Load configuration.
	config, err := config.Load(*flagConfigPath)
	if err != nil {
		flag.Usage()
		log.Fatalf("Failed to load configuration: %s", err)
	}

	// Initialize logging system.
	level, err := log.ParseLevel(*flagLogLevel)
	if err != nil {
		log.Fatalf("Failed to parse the log level: %s", err)
	}
	log.SetLevel(level)

	// Run the proxies.
	jwtproxy.RunProxies(config)
}
